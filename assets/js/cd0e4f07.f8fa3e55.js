"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[420],{67090:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetFunction","desc":"Returns the [Function](Library#Function) with a given name.","params":[{"name":"self","desc":"","lua_type":"Library"},{"name":"name","desc":"The name of the function to retrieve.","lua_type":"string"}],"returns":[{"desc":"The named function.","lua_type":"Function"}],"function_type":"static","source":{"line":31,"path":"runtime/Library/init.lua"}},{"name":"ImportLibrary","desc":"Loads functions from another Library.\\nIf the other Library contains a function with the same name as\\none in this library, the function in the other library takes\\nprecedence.","params":[{"name":"self","desc":"","lua_type":"Library"},{"name":"other","desc":"The library to import functions from.","lua_type":"Library"}],"returns":[],"function_type":"static","source":{"line":42,"path":"runtime/Library/init.lua"}},{"name":"RegisterFunction","desc":"Registers a new function that returns a value, which can be called from a Yarn program.","params":[{"name":"self","desc":"","lua_type":"Library"},{"name":"name","desc":"The name of the function","lua_type":"string"},{"name":"func","desc":"The method to be invoked when the function is called","lua_type":"YarnFunction"}],"returns":[],"function_type":"static","source":{"line":53,"path":"runtime/Library/init.lua"}},{"name":"RegisterStandardLibrary","desc":"Registers the standard library of functions to this Library.\\nThese functions are used for evaluating values within expressions.","params":[{"name":"self","desc":"","lua_type":"Library"}],"returns":[],"function_type":"static","source":{"line":67,"path":"runtime/Library/init.lua"}},{"name":"FunctionExists","desc":"Returns whether this Library contains a function named `name`.","params":[{"name":"self","desc":"","lua_type":"Library"},{"name":"name","desc":"The name of the function to check","lua_type":"string"}],"returns":[{"desc":"Whether the function is registered","lua_type":"boolean"}],"function_type":"static","source":{"line":78,"path":"runtime/Library/init.lua"}},{"name":"DeregisterFunction","desc":"Removes a function from this Library.\\nIf no function with the given name is present in the Library,\\nthis method does nothing.","params":[{"name":"self","desc":"","lua_type":"Library"},{"name":"name","desc":"The name fo the function to remove","lua_type":"string"}],"returns":[],"function_type":"static","source":{"line":88,"path":"runtime/Library/init.lua"}},{"name":"GenerateUniqueVisitedVariableForNode","desc":"Generates a unique tracking variable name.\\nThis is intended to be used to generate names for visting.\\nIdeally these will very reproduceable and sensible.\\nFor now it will be something terrible and easy.","params":[{"name":"self","desc":"","lua_type":"Library"},{"name":"name","desc":"The name of the node that needs to have a tracking variable created.","lua_type":"string"}],"returns":[{"desc":"The new variable name","lua_type":"string"}],"function_type":"static","source":{"line":100,"path":"runtime/Library/init.lua"}},{"name":"new","desc":"Creates a new Library.","params":[],"returns":[{"desc":"","lua_type":"Library\\n"}],"function_type":"static","tags":["constructor"],"source":{"line":107,"path":"runtime/Library/init.lua"}}],"properties":[{"name":"functions","desc":"The mapping table of function names to functions.","lua_type":"{ [string]: Function }","source":{"line":25,"path":"runtime/Library/init.lua"}}],"types":[{"name":"Function","desc":"Represents a function registered to a Library.","lua_type":"{ argumentCount: number, func: YarnFunction }","source":{"line":22,"path":"runtime/types/Library.lua"}},{"name":"YarnFunction","desc":"A function to be called by a Yarn program.","lua_type":"(...Operand?) -> Operand","source":{"line":31,"path":"runtime/types/Library.lua"}}],"name":"Library","desc":"A collection of functions that can be called from Yarn programs.\\nYou do not need to create instances of this class yourself.\\nThe [Dialogue](Dialogue) class creates one of its own, which you can\\naccess via the [Dialogue.Library](Dialogue#Library) property.","source":{"line":9,"path":"runtime/Library/init.lua"}}')}}]);